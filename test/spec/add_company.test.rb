# Generated by Selenium IDE
require 'selenium-webdriver'
require 'json'

# DOCU: Testcases for the Interview Template Add Company
# Owner: Harold
# Last Update Date: Sept. 20, 2022
# Run using: RAILS_ENV=local bundle exec rspec ./test/spec/add_company.test.rb

describe 'AddCompanyProcess' do
    $random_text   = (0...6).map { (65 + rand(26)).chr }.join.downcase
    $random_number   = rand(200..500)
    $random_password   = (0...6).map { (65 + rand(26)).chr  }.join.capitalize + $random_number.to_s
    
    $random_user = {
        :email_address => 'user_'+ $random_text +'_' + $random_number.to_s + '@dctest.com',
        :add_company_url => "https://www-staging.datacompass.com/admin/new-company",
        :admin_dashboard_url => "https://www-staging.datacompass.com/admin/dashboard",
        :created_at => Time.now.utc.to_i,
        :reset_password_url => ""
    }

    before(:all) do
        puts Time.now.strftime("%d/%m/%Y %H:%M")
        options = Selenium::WebDriver::Chrome::Options.new(args: [ "headless", "disable-gpu", "blink-settings=imagesEnabled=false", "--window-size=1920,1080"])
        
        # Staging Run Test
        if ENV["RAILS_ENV"] == "staging"
            @driver = Selenium::WebDriver.for :remote, url: "http://selenium_chrome:4444/wd/hub", desired_capabilities: :chrome, options: options
        else
            @driver = Selenium::WebDriver.for :chrome, options: options
        end
		@driver.manage.window.maximize

		@test_data = {
			:email => "dcstaging@dctest.com",
			:password => "D4t4_C0mp4ss",
		}

		# Step 1: Go to interview template login page
		@driver.get("https://www-staging.datacompass.com/admin/signin")

		# Step 2: Login using test data credentials
		@driver.find_element(:id, "email_textfield_signin").send_keys(@test_data[:email])
		@driver.find_element(:id, "password_textfield_signin").send_keys(@test_data[:password])
		@driver.find_element(:css, ".signin_container .continue_button").click
    end

    before(:each) do
        sleep 1
    end
        
    after(:all) do
        @driver.quit
    end

    # DOCU: This test will check if the add company page. <br>
    # Last updated at: Sep 20, 2022
    # @author Harold
    it '1. Admin should Add company Page' do
        # Step 1: Go to Add Company Page
        @driver.get($random_user[:add_company_url])
        Selenium::WebDriver::Wait.new(timeout: 20).until { @driver.find_element(:id, "add_company_form").displayed? }
        
        # Step 2: Assert Add Company page
        $expected_element = @driver.find_elements(:css, "#company_info")
        expect($expected_element.length).to be > 0
    end
end
