# Generated by Selenium IDE
require 'selenium-webdriver'
require 'json'

# DOCU: Testcases for activity on Ruby On Rails <br>
# Last updated at: Sep 23, 2022
# @author Alfie
# Run using: bundle exec rspec ./test/spec/templates_process.test.rb
describe 'Templates Process' do
    before(:all) do
        options = Selenium::WebDriver::Chrome::Options.new(args: [ "headless", "disable-gpu", "blink-settings=imagesEnabled=false", "--window-size=1920,1080"])
        @driver = Selenium::WebDriver.for :chrome, options: options
        @driver.manage.window.maximize
        @driver.get('http://localhost:3000/')
    end
    before(:each) do
        sleep 1
    end
    after(:all) do
        @driver.quit
    end
    it 'Header template title should same as template title' do
        @driver.find_element(:id, 'template_title').send_keys(' Testing Template')
        @driver.find_element(:id, 'template_title').send_keys(:enter)
        expect(@driver.find_element(:css, '.template_header_title').text).to eq('Untitled Template Testing Template')
    end

    it 'Add Question Template' do
        @driver.find_element(:css, '.add_question_btn').click
        $expected_element = @driver.find_elements(:css, ".template_question")
        expect($expected_element.length).to be > 2
    end

    it 'Duplicate Question Template' do
        @driver.find_element(:name, 'question[1][question_title]').click
        @driver.find_element(:name, 'question[1][question_title]').send_keys(' Test')
        @driver.find_element(:css, '.add_question_option').click
        @driver.find_element(:css, '.question_option_item:nth-child(3) > .question_option_field').send_keys('Option 3')
        @driver.find_element(:css, '.save_btn').click
        @driver.find_element(:css, '#question_id_1 .duplicate_btn_icon').click
        @driver.execute_script("window.scrollTo(0,0)")
        $expected_element = @driver.find_elements(:css, ".template_question")
        expect($expected_element.length).to be > 2
    end

    it 'Delete Question Template' do
        @driver.find_element(:css, '#question_id_3 .delete_btn_icon').click
        Selenium::WebDriver::Wait.new(timeout: 10).until { @driver.find_element(:css, '.delete_modal').displayed? }
        @driver.find_element(:css, '.delete_modal_delete_btn').click
        $expected_element = @driver.find_elements(:css, ".template_question")
        expect($expected_element.length).to be < 5
    end
end
